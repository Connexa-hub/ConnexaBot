name: EAS Build APK (Beta Release)

on:
  push:
    branches:
      - main

permissions:
  contents: write   # ‚úÖ allow creating releases & uploading assets

jobs:
  eas-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install dependencies (Yarn)
        run: yarn install --frozen-lockfile

      - name: Install EAS CLI globally
        run: npm install --global eas-cli

      # üè∑Ô∏è Get latest tag
      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --list "v*-beta" --sort=-v:refname | head -n 1)
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      # üìå Compute next beta version
      - name: Compute next beta version
        id: next_version
        run: |
          if [ -z "$LATEST_TAG" ]; then
            NEXT_TAG="v1.0.0-beta"
          else
            BASE=$(echo $LATEST_TAG | sed 's/-beta//')
            IFS='.' read -r MAJOR MINOR PATCH <<< "$(echo $BASE | sed 's/v//')"
            PATCH=$((PATCH+1))
            NEXT_TAG="v$MAJOR.$MINOR.$PATCH-beta"
          fi

          APP_VERSION=$(echo $NEXT_TAG | sed 's/v//' | sed 's/-beta//')

          IFS='.' read -r MAJOR MINOR PATCH <<< "$APP_VERSION"
          VERSION_CODE=$((MAJOR*10000 + MINOR*100 + PATCH))

          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      # üìù Update app.json version
      - name: Update app.json version
        run: |
          jq ".expo.version = \"${APP_VERSION}\" | .expo.android.versionCode = ${VERSION_CODE}" app.json > app.tmp.json
          mv app.tmp.json app.json
          cat app.json

      # üöÄ Build APK in Expo Cloud
      - name: Build Production APK with EAS
        id: eas_build
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          BUILD_URL=$(eas build --platform android --profile production-apk --non-interactive --wait --json --token $EXPO_TOKEN | jq -r '.artifacts.buildUrl')
          echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

      # ‚¨áÔ∏è Download built APK and rename with version
      - name: Download APK from Expo
        run: |
          mkdir -p dist
          curl -L -o dist/ConnexaBotApp-${{ env.NEXT_TAG }}.apk ${{ env.BUILD_URL }}

      # üì¶ Upload APK as GitHub Actions Artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: connexa-apk
          path: dist/ConnexaBotApp-${{ env.NEXT_TAG }}.apk

      # üöÄ Create GitHub Release & attach APK
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEXT_TAG }}
          name: "ConnexaBotApp Beta Release ${{ env.NEXT_TAG }}"
          body: |
            ConnexaBotApp Beta Release ${{ env.NEXT_TAG }}
            - Early testing version
            - Built via Expo EAS
            - Includes new bot features
          draft: false
          prerelease: true
          files: dist/ConnexaBotApp-${{ env.NEXT_TAG }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
